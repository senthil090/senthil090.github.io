{"data":{"site":{"siteMetadata":{"title":"Senthilkumar S","author":"Senthilkumar Subramanian"}},"markdownRemark":{"id":"99ba0a41-7c1d-54d0-af76-57df4901797c","excerpt":"What is puppeteer? Puppeteer is a cool node library which used to do some browser related operations programmatically. puppeteer runs chromium inside it…","html":"<h3>What is puppeteer?</h3>\n<p>Puppeteer is a cool node library which used to do some browser related operations programmatically. puppeteer runs chromium inside it.</p>\n<h3>Headless Chromium?</h3>\n<p>Headless is simply a chromium without user interface. In other words, browser build for machines not humans . Headless can be embed to code and use programmatically.</p>\n<p>Though puppeteer uses headless chromium by default. We can customize puppeteer to use non headless or specific chrome or chromium builds.</p>\n<h3>These works can be done by puppeteer?</h3>\n<ul>\n<li>\n<p>Taking screenshots of web pages.</p>\n</li>\n<li>\n<p>Generating PDFs from web pages.</p>\n</li>\n<li>\n<p>Scrap data from site. Can crawl single page applications too.\n<span style=\"font-size: 12px\"> ( In Beautifulsoup its almost impossible to scrap SPAs. )</span></p>\n</li>\n<li>\n<p>Automate web related taks.</p>\n</li>\n</ul>\n<h3>Let’s get started.</h3>\n<p>We shall create node js program which will take screenshots of the site with different device sizes.</p>\n<h3>Prerequisites:</h3>\n<p>Node js installed in your computer. Better if its latest version.</p>\n<p>A new folder to hold this code.</p>\n<h3>Setup</h3>\n<ul>\n<li>\n<p>Open the newly created folder in terminal or command prompt</p>\n</li>\n<li>\n<p>run command <code class=\"language-text\">npm init</code> to create package.json which is used to maintain the dependencies of the project.</p>\n</li>\n<li>\n<p>run command <code class=\"language-text\">npm install puppeteer --save</code> to add puppeteer latest published version to your project.the puppeteer will automatically download a chromium version as its need.</p>\n</li>\n<li>\n<p>Now create a main js file. i named it <code class=\"language-text\">index.js</code></p>\n</li>\n</ul>\n<h3>Code</h3>\n<p>import puppeteer into code</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"> <span class=\"token keyword\">const</span>  puppeteer  <span class=\"token operator\">=</span>  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'puppeteer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </code></pre></div>\n<p>I have created the function called <code class=\"language-text\">takescreenshot</code> which accepts two command line arguments . one is url of the web page another is a file path to save screenshots.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span>  takescreenshot  <span class=\"token operator\">=</span>  <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>url <span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">takescreenshot</span><span class=\"token punctuation\">(</span> process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>This method must be prefixed the async operator since it holds lot of promises using await</p>\n</blockquote>\n<p>Initially we need to create the browser instance . we can create many browser instances as much as our system memory allows to create :p</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Launching a new browser instance</span>\n\n<span class=\"token keyword\">const</span>  browser  <span class=\"token operator\">=</span>  <span class=\"token keyword\">await</span>  puppeteer<span class=\"token punctuation\">.</span><span class=\"token function\">launch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>After browser launches ,  we shall create a page which is the equivalent of tab in our usable browsers.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Opening a new page . simply like new tab</span>\n\n<span class=\"token keyword\">const</span>  tab  <span class=\"token operator\">=</span>  <span class=\"token keyword\">await</span>  browser<span class=\"token punctuation\">.</span><span class=\"token function\">newPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>We can hit the url in the tab by using <code class=\"language-text\">goto(url)</code> function.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// go to the destinated web page</span>\n    <span class=\"token keyword\">await</span> tab<span class=\"token punctuation\">.</span><span class=\"token function\">goto</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Since we are building the application get the responsive web page screenshots. we can change the viewport size of the page. we use <code class=\"language-text\">setViewport({width: Number , height: Number})</code> function.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Set tab viewport sizes</span>\n    tab<span class=\"token punctuation\">.</span><span class=\"token function\">setViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        width<span class=\"token punctuation\">:</span> <span class=\"token number\">768</span><span class=\"token punctuation\">,</span>\n        height<span class=\"token punctuation\">:</span> <span class=\"token number\">1024</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>And the core line of the program which take screenshot of the current tab.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// take a screenshot of page</span>\n    tab<span class=\"token punctuation\">.</span><span class=\"token function\">screenshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        path<span class=\"token punctuation\">:</span> path <span class=\"token comment\">// Path to store the screenshot image</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Finally its best practice to close the browser after we done our operations..</p>","frontmatter":{"title":"Getting Started with Puppeteer - 1","author":"Senthilkumar S","date":"July 21, 2019"}}},"pageContext":{"slug":"/getting-started-with-puppeteer-1/","previous":{"fields":{"slug":"/hello-world/"},"frontmatter":{"title":"Hello World"}},"next":null}}